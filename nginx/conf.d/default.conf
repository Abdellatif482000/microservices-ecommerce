# worker_processes 1;
# worker_processes auto;  automatically detects num. of CPUs cores available on server .


# events{
# 	worker_connections 1024;
# 	 # how many will works simulationally , 1024 means 1 worker process , will serve 1024 clients and 2 will serve 2048
# }

# http {
# 	include mime.types;


	


	# Use Subdomains
	
	upstream auhtserver{
		server auth:8084;
	}

	upstream productserver{
		server product:8081;
	}

	upstream cartserver{
		server cart:8082;
	}

	upstream orderserver{
		server order:8083;
	}
	
	server{
		listen 80;

		server_name auhtserver.localhost;
		location / {
			proxy_pass http://auhtserver;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection 'upgrade';
			add_header X-Custom-Message "msg from nginx";

		}
	}
	
	server{
		listen 80;

		server_name productserver.localhost;
		location / {
			proxy_pass http://productserver;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection 'upgrade';
			add_header X-Custom-Message "msg from nginx";

		}
	}

	server{
		listen 80;

		server_name cartserver.localhost;
		location / {
			proxy_pass http://cartserver;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection 'upgrade';
			add_header X-Custom-Message "msg from nginx";

		}
	}

	server{
		listen 80;

		server_name orderserver.localhost;
		location / {
			proxy_pass http://orderserver;
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection 'upgrade';
			add_header X-Custom-Message "msg from nginx";

		}
	}

	# Using URL Paths to Route Traffic
	# server{
	# 	listen 80;
	# 	server_name localhost;

	# 	location / {
	# 		proxy_pass http://nodejs_cluster;
	# 		proxy_set_header Host $host;
	# 		proxy_set_header X-Real-IP $remote_addr;
			
	# 	}

	# 	location /server1/ {
    #     proxy_pass http://127.0.0.1:8081/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
   	# 	}

	# 	location /server2/ {
    #     proxy_pass http://127.0.0.1:8082/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
   	# 	}

	# 	location /server3/ {
    #     proxy_pass http://127.0.0.1:8083/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
   	# 	}
	# }sasadasdasdsad



# }

